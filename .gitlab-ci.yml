stages:
  - checking
  - versioning
  - docker
  - notify

clang-format:
  stage: checking
  tags:
    - arm
  image: $NEXUS_REGISTRY/drone_osdk_ros
  script:
    - wget https://nexus.aniklab.com/repository/filestore/drone/check-clang-format.py
    - python check-clang-format.py -r .

update-version:
  stage: versioning
  tags:
      - arm
  only:
    - release
  image: $NEXUS_REGISTRY/drone_osdk_ros
  script:
    - mkdir build
    - cd build
    - cmake ..
    - cd ..
    - git add package.xml
    - git commit -m "Test"

build_with_tests_and_run_tests:
  stage: build
  tags:
    - arm
  image: $NEXUS_REGISTRY/drone_osdk_ros
  script:
    - echo "current dir $(pwd) files $(ls)"
    - mkdir -p /home/buildenv/catkin_ws/src/drone
    - cp ./* -r /home/buildenv/catkin_ws/src/drone
    - cd /home/buildenv/catkin_ws
    - source /opt/ros/$(ls /opt/ros)/setup.bash
    - roscore & catkin_make run_tests --cmake-args -DBUILD_UNIT_TESTS=ON
    - ./devel/lib/drone/drone_tests
  except:
    - release

on_success:
  stage: notify
  tags:
    - ia64
  only:
    - release
  image: docker.dev.ask-glonass.ru/telegram
  variables:
    GIT_STRATEGY: none
  when: on_success
  script: notify_ok

on_fail:
  stage: notify
  tags:
    - ia64
  only:
    - release
  image: docker.dev.ask-glonass.ru/telegram
  variables:
    GIT_STRATEGY: none
  when: on_failure
  script: notify_fail
